

ok, so i should be able to insert that code into the current stuff, to 
setup the patterns.

but when it comes to making use of the patterns...


{ [#]{ }(b|o|$) }{ }!


glider
bo$2bo$3o!



-> input rleString


pattern = [ ];
currRow = 0;
currCol = 0;   // col the _next_ item will go into
strPos = 0;    // curr pos within RLE string
c = rleString.charAt(strPos);
numberOf = 1;
while ( c != '!' ) {
    if (c == '\d') {
        var patt = /\d+/g;
        patt.lastIndex = strPos;
        var numString = patt.exec(rleString);
        numberOf = 0 + numString;
        strPos += numString.length;
    *** UP TO HERE ****
    } else if (c == any whitespace incl newlines) {
        consume all of the whitespace;
        strPos =;
    } else {
        if (c == 'b') {
            currCol += numberOf;
        } else if (c == 'o') {
            var endPt = currCol + numberOf;
            for (; currCol < endPt; currCol++) {
                pattern.append( [ currRow, currCol ] );
            }
        } elseif (c == '$') {
            currRow++;
        }
        numberOf = 1;
        strPos++;
    }
    c = rleString.charAt(strPos);
}             
        



    


and then the patterns assoc array could be like


    var patterns = {

        TLglider: new Pattern([ [2,0], [2,1], [2,2], [1,2], [0,1] ]),

        block: new Pattern([ [1,1], [2,1], [1,2], [2,2] ]),

        tub: new Pattern([ [1,0], [0,1], [2,1], [1,2] ]),

        GosperGliderGun: new Pattern(
            "#N Gosper glider gun\n"
            "#O Bill Gosper\n"
            "#C A true period 30 glider gun.\n"
            "#C The first known gun and the first known finite pattern with unbounded growth.\n"
            "#C www.conwaylife.com/wiki/index.php?title=Gosper_glider_gun\n"
            "x = 36, y = 9, rule = B3/S23\n"
            "24bo11b$22bobo11b$12b2o6b2o12b2o$11bo3bo4b2o12b2o$2o8bo5bo3b2o14b$2o8b
            o3bob2o4bobo11b$10bo5bo7bo11b$11bo3bo20b$12b2o!"
        ),

        etc

    }








